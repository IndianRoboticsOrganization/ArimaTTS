%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 9.0
%%For: (Home User) (Home)
%%Title: (ClassLM2.eps)
%%CreationDate: 2/27/2002 3:16 PM
%%BoundingBox: 111 230 481 608
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: Helvetica
%%+ Helvetica-Bold
%%+ Helvetica-Oblique
%%DocumentNeededFonts: Helvetica
%%+ Helvetica-Bold
%%+ Helvetica-Oblique
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI3_TemplateBox: 296.5 419.5 296.5 419.5
%AI3_TileBox: -55 -123 517 699
%AI3_DocumentPreview: Header
%%PageOrigin:-55 -123
%%AI3_PaperRect:-9 833 586 -9
%%AI3_Margin:9 -9 -14 9
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
 end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_cmykcolor eq
	{
 end
	} if
} def
/setcmykcolor
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 0
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Helvetica-Oblique
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding TrueType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ%AI3_EndEncoding TrueType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ%AI3_EndEncoding TrueType
%AI3_BeginPattern: (Azure Rings)
(Azure Rings) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Blue Tablecloth)
(Blue Tablecloth) 0 0 12 12 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d6 6 m
0 6 L
0 12 L
6 12 L
6 6 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.3098 0 0 k
 0.3922 0.3098 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d12 6 m
6 6 L
6 12 L
12 12 L
12 6 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d12 0 m
6 0 L
6 6 L
12 6 L
12 0 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.3098 0 0 k
 0.3922 0.3098 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d6 0 m
0 0 L
0 6 L
6 6 L
6 0 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Camouflage)
(Camouflage) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.6 0.1412 0.9373 0.0275 k
 0.6 0.1412 0.9373 0.0275 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4941 0.3529 0.9529 0.2 k
 0.4941 0.3529 0.9529 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1098 0.9059 0.0157 k
 0.1882 0.1098 0.9059 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9216 0.2157 0.9451 0.0745 k
 0.9216 0.2157 0.9451 0.0745 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Clown Attack)
(Clown Attack) 5.25 11 41.25 47 [
%AI3_Tile
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d17.5 18.25 m
17.5 15.2119 15.0376 12.75 12 12.75 c
8.9624 12.75 6.5 15.2119 6.5 18.25 c
6.5 21.2881 8.9624 23.75 12 23.75 c
15.0376 23.75 17.5 21.2881 17.5 18.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.9529 0 0 k
 0.0078 0.9529 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d22.25 34.125 m
22.25 31.2939 19.9556 29 17.125 29 c
14.2944 29 12 31.2939 12 34.125 c
12 36.9561 14.2944 39.25 17.125 39.25 c
19.9556 39.25 22.25 36.9561 22.25 34.125 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d30 31.625 m
30 29.4854 28.2646 27.75 26.125 27.75 c
23.9849 27.75 22.25 29.4854 22.25 31.625 c
22.25 33.7646 23.9849 35.5 26.125 35.5 c
28.2646 35.5 30 33.7646 30 31.625 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d23.25 24.5 m
23.25 22.4287 21.5713 20.75 19.5 20.75 c
17.4287 20.75 15.75 22.4287 15.75 24.5 c
15.75 26.5713 17.4287 28.25 19.5 28.25 c
21.5713 28.25 23.25 26.5713 23.25 24.5 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d36 22.25 m
36 19.0742 33.4258 16.5 30.25 16.5 c
27.0742 16.5 24.5 19.0742 24.5 22.25 c
24.5 25.4258 27.0742 28 30.25 28 c
33.4258 28 36 25.4258 36 22.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1216 0.8 0.0157 k
 0.1882 0.1216 0.8 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d24.25 16.5 m
24.25 14.8438 22.9067 13.5 21.25 13.5 c
19.5933 13.5 18.25 14.8438 18.25 16.5 c
18.25 18.1563 19.5933 19.5 21.25 19.5 c
22.9067 19.5 24.25 18.1563 24.25 16.5 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d37.25 43.875 m
37.25 39.5264 33.7236 36 29.375 36 c
25.0264 36 21.5 39.5264 21.5 43.875 c
21.5 48.2236 25.0264 51.75 29.375 51.75 c
33.7236 51.75 37.25 48.2236 37.25 43.875 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.1961 0.9373 0 k
 0.0078 0.1961 0.9373 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d38.75 26.625 m
38.75 25.7275 38.0225 25 37.125 25 c
36.2275 25 35.5 25.7275 35.5 26.625 c
35.5 27.5225 36.2275 28.25 37.125 28.25 c
38.0225 28.25 38.75 27.5225 38.75 26.625 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0196 0.5961 0.9137 0 k
 0.0196 0.5961 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d19.875 42 m
19.875 41.1025 19.1475 40.375 18.25 40.375 c
17.3525 40.375 16.625 41.1025 16.625 42 c
16.625 42.8975 17.3525 43.625 18.25 43.625 c
19.1475 43.625 19.875 42.8975 19.875 42 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d12.75 28.125 m
12.75 26.8135 11.6865 25.75 10.375 25.75 c
9.0635 25.75 8 26.8135 8 28.125 c
8 29.4365 9.0635 30.5 10.375 30.5 c
11.6865 30.5 12.75 29.4365 12.75 28.125 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d43.25 33 m
43.25 30.998 41.627 29.375 39.625 29.375 c
37.623 29.375 36 30.998 36 33 c
36 35.002 37.623 36.625 39.625 36.625 c
41.627 36.625 43.25 35.002 43.25 33 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d13.25 43.75 m
13.25 40.9883 11.0117 38.75 8.25 38.75 c
5.4883 38.75 3.25 40.9883 3.25 43.75 c
3.25 46.5117 5.4883 48.75 8.25 48.75 c
11.0117 48.75 13.25 46.5117 13.25 43.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d6.5 22.25 m
6.5 20.7314 5.2686 19.5 3.75 19.5 c
2.2314 19.5 1 20.7314 1 22.25 c
1 23.7686 2.2314 25 3.75 25 c
5.2686 25 6.5 23.7686 6.5 22.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.0118 0.6 0 k
 0.0235 0.0118 0.6 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d34.4883 32.75 m
34.4883 31.9277 33.8223 31.2617 33 31.2617 c
32.1777 31.2617 31.5117 31.9277 31.5117 32.75 c
31.5117 33.5723 32.1777 34.2383 33 34.2383 c
33.8223 34.2383 34.4883 33.5723 34.4883 32.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d49.25 43.75 m
49.25 40.9883 47.0117 38.75 44.25 38.75 c
41.4883 38.75 39.25 40.9883 39.25 43.75 c
39.25 46.5117 41.4883 48.75 44.25 48.75 c
47.0117 48.75 49.25 46.5117 49.25 43.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d42.5 22.25 m
42.5 20.7314 41.2686 19.5 39.75 19.5 c
38.2314 19.5 37 20.7314 37 22.25 c
37 23.7686 38.2314 25 39.75 25 c
41.2686 25 42.5 23.7686 42.5 22.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d49.25 7.752 m
49.25 4.9902 47.0117 2.752 44.25 2.752 c
41.4883 2.752 39.25 4.9902 39.25 7.752 c
39.25 10.5137 41.4883 12.752 44.25 12.752 c
47.0117 12.752 49.25 10.5137 49.25 7.752 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d37.25 7.875 m
37.25 3.5264 33.7236 0 29.375 0 c
25.0264 0 21.5 3.5264 21.5 7.875 c
21.5 12.2236 25.0264 15.75 29.375 15.75 c
33.7236 15.75 37.25 12.2236 37.25 7.875 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d13.25 7.75 m
13.25 4.9883 11.0117 2.75 8.25 2.75 c
5.4883 2.75 3.25 4.9883 3.25 7.75 c
3.25 10.5117 5.4883 12.75 8.25 12.75 c
11.0117 12.75 13.25 10.5117 13.25 7.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d7.25 33 m
7.25 30.998 5.627 29.375 3.625 29.375 c
1.623 29.375 0 30.998 0 33 c
0 35.002 1.623 36.625 3.625 36.625 c
5.627 36.625 7.25 35.002 7.25 33 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.4078 0 0 k
 0.0235 0.4078 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d39.6533 16.0381 m
39.6533 15.1064 38.8975 14.3506 37.9658 14.3506 c
37.0342 14.3506 36.2783 15.1064 36.2783 16.0381 c
36.2783 16.9697 37.0342 17.7256 37.9658 17.7256 c
38.8975 17.7256 39.6533 16.9697 39.6533 16.0381 c
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pyramids)
(Pyramids) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.1882 0.1294 0.102 0.0118 k
 0.1882 0.1294 0.102 0.0118 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k
 0.6235 0.4863 0.4863 0.4784 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k
 0.3529 0.2549 0.2235 0.0667 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k
 0.4902 0.3647 0.3451 0.2196 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Red Stripe)
(Red Stripe) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
u8 i
0 O
0 0 0 0 k
0 J 0 j 1 w 4 M []0 d256.7642 607.4453 m
254.2446 607.4453 252.3247 605.5254 252.3247 603.0059 c
252.3247 576.7275 l
252.3247 574.3281 254.2446 572.4082 256.7642 572.4082 c
335.5977 572.4082 l
337.998 572.4082 339.917 574.3281 339.917 576.7275 c
339.917 603.0059 l
339.917 605.5254 337.998 607.4453 335.5977 607.4453 c
256.7642 607.4453 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 1 j 0.73 w 10 M256.7642 607.4453 m
254.2446 607.4453 252.3247 605.5254 252.3247 603.0059 c
252.3247 576.7275 l
252.3247 574.3281 254.2446 572.4082 256.7642 572.4082 c
335.5977 572.4082 l
337.998 572.4082 339.917 574.3281 339.917 576.7275 c
339.917 603.0059 l
339.917 605.5254 337.998 607.4453 335.5977 607.4453 c
256.7642 607.4453 l
s0 To
1 0 0 1 285.082 585.4873 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M/_Helvetica 11.6789 Tf
0 Ts
100 Tz
-1 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
-0.0117 Tc
0 Tw
(Text) Tx 
(\r) Tx 
TO
0 0 0 0 k
374.9541 546.1309 m
462.5469 546.1309 l
462.5469 511.0938 l
374.9541 511.0938 l
374.9541 546.1309 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 0.73 w 8 M374.9541 546.1309 m
374.9541 511.0938 l
462.5469 511.0938 l
462.5469 546.1309 l
374.9541 546.1309 l
s0 To
1 0 0 1 391.873 524.8926 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 1 w 4 M/_Helvetica-Bold 11.6789 Tf
-3 Tt
-0.035 Tc
(LNew) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 422.9502 524.8926 0 Tp
TP
0 Tr
20 Tt
0.2336 Tc
(Ma) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 439.3887 524.8926 0 Tp
TP
0 Tr
0 Tt
0 Tc
(p) Tx 
(\r) Tx 
TO
0 0 0 0 k
252.3247 546.1309 m
339.917 546.1309 l
339.917 511.0938 l
252.3247 511.0938 l
252.3247 546.1309 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 0.73 w 8 M252.3247 546.1309 m
252.3247 511.0938 l
339.917 511.0938 l
339.917 546.1309 l
252.3247 546.1309 l
s0 To
1 0 0 1 275.4829 524.8926 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 1 w 4 M5 Tt
0.0584 Tc
(LG) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 291.5615 524.8926 0 Tp
TP
0 Tr
11 Tt
0.1285 Tc
(Pr) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 304.04 524.8926 0 Tp
TP
0 Tr
-12 Tt
-0.1401 Tc
(ep) Tx 
(\r) Tx 
TO
0 0 0 0 k
256.7642 484.8154 m
254.2446 484.8154 252.3247 482.8955 252.3247 480.376 c
252.3247 454.2178 l
252.3247 451.8184 254.2446 449.7783 256.7642 449.7783 c
335.5977 449.7783 l
337.998 449.7783 339.917 451.8184 339.917 454.2178 c
339.917 480.376 l
339.917 482.8955 337.998 484.8154 335.5977 484.8154 c
256.7642 484.8154 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 1 j 0.73 w 10 M256.7642 484.8154 m
254.2446 484.8154 252.3247 482.8955 252.3247 480.376 c
252.3247 454.2178 l
252.3247 451.8184 254.2446 449.7783 256.7642 449.7783 c
335.5977 449.7783 l
337.998 449.7783 339.917 451.8184 339.917 454.2178 c
339.917 480.376 l
339.917 482.8955 337.998 484.8154 335.5977 484.8154 c
256.7642 484.8154 l
s0 To
1 0 0 1 269.7231 462.8574 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M/_Helvetica 11.6789 Tf
-7 Tt
-0.0818 Tc
(Gr) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 282.8022 462.8574 0 Tp
TP
0 Tr
-12 Tt
-0.1401 Tc
(am) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 302.2402 462.8574 0 Tp
TP
0 Tr
4 Tt
0.0467 Tc
(file) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 317.2393 462.8574 0 Tp
TP
0 Tr
0 Tt
0 Tc
(s) Tx 
(\r) Tx 
TO
0 0 0 0 k
379.3945 484.8154 m
376.874 484.8154 374.9541 482.8955 374.9541 480.376 c
374.9541 454.2178 l
374.9541 451.8184 376.874 449.7783 379.3945 449.7783 c
458.2275 449.7783 l
460.627 449.7783 462.5469 451.8184 462.5469 454.2178 c
462.5469 480.376 l
462.5469 482.8955 460.627 484.8154 458.2275 484.8154 c
379.3945 484.8154 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 1 j 0.73 w 10 M379.3945 484.8154 m
376.874 484.8154 374.9541 482.8955 374.9541 480.376 c
374.9541 454.2178 l
374.9541 451.8184 376.874 449.7783 379.3945 449.7783 c
458.2275 449.7783 l
460.627 449.7783 462.5469 451.8184 462.5469 454.2178 c
462.5469 480.376 l
462.5469 482.8955 460.627 484.8154 458.2275 484.8154 c
379.3945 484.8154 l
s0 To
1 0 0 1 392.2334 462.8574 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M32 Tt
0.3737 Tc
(Wo) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 409.8721 462.8574 0 Tp
TP
0 Tr
6 Tt
0.0701 Tc
(rd) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 423.3105 462.8574 0 Tp
TP
0 Tr
10 Tt
0.1168 Tc
(ma) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 439.6289 462.8574 0 Tp
TP
0 Tr
0 Tt
0 Tc
(p) Tx 
(\r) Tx 
TO
0 0 0 0 k
252.3247 423.501 m
339.917 423.501 l
339.917 388.4639 l
252.3247 388.4639 l
252.3247 423.501 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 0.73 w 8 M252.3247 423.501 m
252.3247 388.4639 l
339.917 388.4639 l
339.917 423.501 l
252.3247 423.501 l
s0 To
1 0 0 1 273.9229 402.2627 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 1 w 4 M/_Helvetica-Bold 11.6789 Tf
-4 Tt
-0.0467 Tc
(LGCo) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 305.4805 402.2627 0 Tp
TP
0 Tr
26 Tt
0.3037 Tc
(py) Tx 
(\r) Tx 
TO
0 0 0 0 k
374.9541 423.501 m
462.5469 423.501 l
462.5469 388.4639 l
374.9541 388.4639 l
374.9541 423.501 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 0.73 w 8 M374.9541 423.501 m
374.9541 388.4639 l
462.5469 388.4639 l
462.5469 423.501 l
374.9541 423.501 l
s0 To
1 0 0 1 400.9922 402.2627 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 1 w 4 M-5 Tt
-0.0584 Tc
(LBui) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 426.9102 402.2627 0 Tp
TP
0 Tr
-1 Tt
-0.0117 Tc
(ld) Tx 
(\r) Tx 
TO
0 0 0 0 k
381.5537 362.1855 m
377.9541 362.1855 374.9541 359.1865 374.9541 355.5869 c
374.9541 316.2295 l
374.9541 312.5098 377.9541 309.6299 381.5537 309.6299 c
455.9482 309.6299 l
459.667 309.6299 462.5469 312.5098 462.5469 316.2295 c
462.5469 355.5869 l
462.5469 359.1865 459.667 362.1855 455.9482 362.1855 c
381.5537 362.1855 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 1 j 0.73 w 10 M381.5537 362.1855 m
377.9541 362.1855 374.9541 359.1865 374.9541 355.5869 c
374.9541 316.2295 l
374.9541 312.5098 377.9541 309.6299 381.5537 309.6299 c
455.9482 309.6299 l
459.667 309.6299 462.5469 312.5098 462.5469 316.2295 c
462.5469 355.5869 l
462.5469 359.1865 459.667 362.1855 455.9482 362.1855 c
381.5537 362.1855 l
s0 To
1 0 0 1 389.2334 339.5078 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M/_Helvetica 11.6789 Tf
-3 Tt
-0.035 Tc
(Cl) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 400.3926 339.5078 0 Tp
TP
0 Tr
0 Tt
0 Tc
(a) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 406.752 339.5078 0 Tp
TP
0 Tr
(ss-cl) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 430.8701 339.5078 0 Tp
TP
0 Tr
-12 Tt
-0.1401 Tc
(as) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 443.1084 339.5078 0 Tp
TP
0 Tr
0 Tt
0 Tc
(s) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 390.3135 326.1885 0 Tp
TP
0 Tr
3 Tt
0.035 Tc
(co) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 402.5518 326.1885 0 Tp
TP
0 Tr
10 Tt
0.1168 Tc
(mp) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 418.751 326.1885 0 Tp
TP
0 Tr
-1 Tt
-0.0117 Tc
(onent) Tx 
(\r) Tx 
TO
*u
0.0235 0.0196 0.0196 0.9922 k
296.481 572.4082 m
296.481 551.0498 l
296.481 550.8105 296.3608 550.5703 296.1211 550.5703 c
295.8809 550.5703 295.7612 550.8105 295.7612 550.9297 c
295.7612 572.4082 l
295.7612 572.6484 295.8809 572.7686 296.1211 572.7686 c
296.2412 572.7686 296.481 572.6484 296.481 572.4082 c
296.481 572.4082 l
f301.041 552.0098 m
296.1211 546.1309 l
291.2017 552.0098 l
301.041 552.0098 l
f*U
*u
296.481 511.0938 m
296.481 489.6152 l
296.481 489.4951 296.3608 489.2549 296.1211 489.2549 c
296.001 489.2549 295.7612 489.4951 295.7612 489.6152 c
295.7612 511.0938 l
295.7612 511.333 295.8809 511.4531 296.1211 511.4531 c
296.3608 511.4531 296.481 511.333 296.481 511.0938 c
296.481 511.0938 l
f301.041 490.6953 m
296.2412 484.8154 l
291.3213 490.6953 l
301.041 490.6953 l
f*U
*u
419.1104 511.0938 m
419.2305 489.6152 l
419.2305 489.4951 418.9912 489.2549 418.8711 489.2549 c
418.6309 489.2549 418.3906 489.4951 418.3906 489.6152 c
418.3906 511.0938 l
418.3906 511.333 418.5107 511.4531 418.751 511.4531 c
418.9912 511.4531 419.1104 511.333 419.1104 511.0938 c
419.1104 511.0938 l
f423.6709 490.6953 m
418.8711 484.8154 l
413.9512 490.6953 l
423.6709 490.6953 l
f*U
*u
419.1104 449.7783 m
419.2305 428.3008 l
419.2305 428.1807 418.9912 427.9404 418.8711 427.9404 c
418.6309 427.9404 418.3906 428.1807 418.3906 428.3008 c
418.3906 449.7783 l
418.3906 450.0186 418.5107 450.1387 418.751 450.1387 c
418.9912 450.1387 419.1104 450.0186 419.1104 449.7783 c
419.1104 449.7783 l
f423.6709 429.3799 m
418.8711 423.501 l
413.9512 429.2607 l
423.6709 429.3799 l
f*U
*u
340.2773 467.417 m
372.915 410.4219 l
373.0342 410.1816 372.915 409.9424 372.7949 409.8223 c
372.5547 409.8223 372.3145 409.8223 372.1943 410.0615 c
339.6777 467.0566 l
339.5576 467.2969 339.5576 467.5371 339.7979 467.6572 c
339.917 467.6572 340.1572 467.6572 340.2773 467.417 c
340.2773 467.417 l
f376.2744 413.4219 m
374.9541 405.9824 l
367.875 408.6221 l
376.2744 413.4219 l
f*U
*u
296.481 444.9785 m
296.481 428.3008 l
296.481 428.1807 296.3608 427.9404 296.1211 427.9404 c
296.001 427.9404 295.7612 428.1807 295.7612 428.3008 c
295.7612 444.9785 l
295.7612 445.0986 296.001 445.3389 296.1211 445.3389 c
296.3608 445.3389 296.481 445.0986 296.481 444.9785 c
296.481 444.9785 l
f291.3213 444.0195 m
296.1211 449.7783 l
301.041 444.0195 l
291.3213 444.0195 l
f301.041 429.3799 m
296.2412 423.501 l
291.3213 429.2607 l
301.041 429.3799 l
f*U
*u
419.1104 383.5439 m
419.2305 366.9854 l
419.2305 366.8652 418.9912 366.626 418.8711 366.626 c
418.6309 366.626 418.3906 366.8652 418.3906 366.9854 c
418.3906 383.5439 l
418.3906 383.7842 418.6309 383.9043 418.751 383.9043 c
418.9912 383.9043 419.1104 383.7842 419.1104 383.5439 c
419.1104 383.5439 l
f413.9512 382.584 m
418.751 388.4639 l
423.6709 382.584 l
413.9512 382.584 l
f423.6709 368.0654 m
418.8711 362.1855 l
413.9512 367.9453 l
423.6709 368.0654 l
f*U
*u
342.0771 410.4219 m
372.1943 463.2178 l
372.3145 463.457 372.5547 463.457 372.7949 463.3379 c
372.915 463.2178 373.0342 463.0977 372.915 462.8574 c
342.6768 410.0615 l
342.5576 409.8223 342.3174 409.8223 342.1973 409.8223 c
341.957 409.9424 341.957 410.1816 342.0771 410.4219 c
342.0771 410.4219 l
f347.1172 408.6221 m
339.917 405.9824 l
338.5977 413.4219 l
347.1172 408.6221 l
f367.875 464.6572 m
374.9541 467.2969 l
376.2744 459.8574 l
367.875 464.6572 l
f*U
*u
342.6768 524.5322 m
372.915 471.7363 l
373.0342 471.4971 372.915 471.2568 372.7949 471.1367 c
372.5547 471.1367 372.3145 471.1367 372.1943 471.377 c
342.0771 524.1729 l
341.957 524.4121 341.957 524.6523 342.1973 524.6523 c
342.3174 524.7725 342.5576 524.7725 342.6768 524.5322 c
342.6768 524.5322 l
f338.5977 521.1729 m
339.917 528.6123 l
347.1172 525.9727 l
338.5977 521.1729 l
f376.2744 474.7363 m
374.9541 467.2969 l
367.875 469.9365 l
376.2744 474.7363 l
f*U
0 0 0 0 k
129.6948 484.8154 m
217.2876 484.8154 l
217.2876 449.7783 l
129.6948 449.7783 l
129.6948 484.8154 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 0.73 w 8 M129.6948 484.8154 m
129.6948 449.7783 l
217.2876 449.7783 l
217.2876 484.8154 l
129.6948 484.8154 l
s0 To
1 0 0 1 153.813 463.5771 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 1 w 4 M/_Helvetica-Bold 11.6789 Tf
3 Tt
0.035 Tc
(Cluste) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 189.4502 463.5771 0 Tp
TP
0 Tr
0 Tt
0 Tc
(r) Tx 
(\r) Tx 
TO
0 0 0 0 k
134.1348 423.501 m
131.6147 423.501 129.6948 421.5811 129.6948 419.0615 c
129.6948 392.7832 l
129.6948 390.3838 131.6147 388.4639 134.1348 388.4639 c
212.9678 388.4639 l
215.3677 388.4639 217.2876 390.3838 217.2876 392.7832 c
217.2876 419.0615 l
217.2876 421.5811 215.3677 423.501 212.9678 423.501 c
134.1348 423.501 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 1 j 0.73 w 10 M134.1348 423.501 m
131.6147 423.501 129.6948 421.5811 129.6948 419.0615 c
129.6948 392.7832 l
129.6948 390.3838 131.6147 388.4639 134.1348 388.4639 c
212.9678 388.4639 l
215.3677 388.4639 217.2876 390.3838 217.2876 392.7832 c
217.2876 419.0615 l
217.2876 421.5811 215.3677 423.501 212.9678 423.501 c
134.1348 423.501 l
s0 To
1 0 0 1 146.2534 401.543 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M/_Helvetica 11.6789 Tf
-2 Tt
-0.0234 Tc
(Clas) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 169.5317 401.543 0 Tp
TP
0 Tr
281 Tt
3.2818 Tc
(sm) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 188.4902 401.543 0 Tp
TP
0 Tr
-1 Tt
-0.0117 Tc
(ap) Tx 
(\r) Tx 
TO
0 0 0 0 k
136.2944 362.1855 m
132.6948 362.1855 129.6948 359.1865 129.6948 355.5869 c
129.6948 316.2295 l
129.6948 312.5098 132.6948 309.6299 136.2944 309.6299 c
210.688 309.6299 l
214.4077 309.6299 217.2876 312.5098 217.2876 316.2295 c
217.2876 355.5869 l
217.2876 359.1865 214.4077 362.1855 210.688 362.1855 c
136.2944 362.1855 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 1 j 0.73 w 10 M136.2944 362.1855 m
132.6948 362.1855 129.6948 359.1865 129.6948 355.5869 c
129.6948 316.2295 l
129.6948 312.5098 132.6948 309.6299 136.2944 309.6299 c
210.688 309.6299 l
214.4077 309.6299 217.2876 312.5098 217.2876 316.2295 c
217.2876 355.5869 l
217.2876 359.1865 214.4077 362.1855 210.688 362.1855 c
136.2944 362.1855 l
s0 To
1 0 0 1 144.6938 339.5078 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M32 Tt
0.3737 Tc
(Wo) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 162.4521 339.5078 0 Tp
TP
0 Tr
-4 Tt
-0.0467 Tc
(rd-c) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 182.2505 339.5078 0 Tp
TP
0 Tr
14 Tt
0.1635 Tc
(la) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 191.3696 339.5078 0 Tp
TP
0 Tr
3 Tt
0.035 Tc
(ss) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 145.0537 326.0693 0 Tp
TP
0 Tr
(co) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 157.2925 326.0693 0 Tp
TP
0 Tr
10 Tt
0.1168 Tc
(mp) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 173.4912 326.0693 0 Tp
TP
0 Tr
-1 Tt
-0.0117 Tc
(onent) Tx 
(\r) Tx 
TO
0 0 0 0 k
252.3247 353.4268 m
339.917 353.4268 l
339.917 318.3896 l
252.3247 318.3896 l
252.3247 353.4268 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 0.73 w 8 M252.3247 353.4268 m
252.3247 318.3896 l
339.917 318.3896 l
339.917 353.4268 l
252.3247 353.4268 l
s0 To
1 0 0 1 281.0024 332.1885 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 1 w 4 M/_Helvetica-Bold 11.6789 Tf
-3 Tt
-0.035 Tc
(LLin) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 305.6006 332.1885 0 Tp
TP
0 Tr
0 Tt
0 Tc
(k) Tx 
(\r) Tx 
TO
0 0 0 0 k
258.9243 283.2324 m
255.3242 283.2324 252.3247 280.3525 252.3247 276.7529 c
252.3247 237.2764 l
252.3247 233.6768 255.3242 230.7969 258.9243 230.7969 c
333.3184 230.7969 l
337.0381 230.7969 339.917 233.6768 339.917 237.2764 c
339.917 276.7529 l
339.917 280.3525 337.0381 283.2324 333.3184 283.2324 c
258.9243 283.2324 l
f0 R
0.0235 0.0196 0.0196 0.9922 K
1 J 1 j 0.73 w 10 M258.9243 283.2324 m
255.3242 283.2324 252.3247 280.3525 252.3247 276.7529 c
252.3247 237.2764 l
252.3247 233.6768 255.3242 230.7969 258.9243 230.7969 c
333.3184 230.7969 l
337.0381 230.7969 339.917 233.6768 339.917 237.2764 c
339.917 276.7529 l
339.917 280.3525 337.0381 283.2324 333.3184 283.2324 c
258.9243 283.2324 l
s0 To
1 0 0 1 261.8037 260.6738 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M/_Helvetica 11.6789 Tf
-3 Tt
-0.035 Tc
(Cl) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 272.9629 260.6738 0 Tp
TP
0 Tr
-12 Tt
-0.1401 Tc
(as) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 285.2021 260.6738 0 Tp
TP
0 Tr
0 Tt
0 Tc
(s) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 294.3213 260.6738 0 Tp
TP
0 Tr
/_Helvetica-Oblique 11.6789 Tf
(n) Tx 
(\r) Tx 
TO
0 To
1 0 0 1 300.6807 260.6738 0 Tp
TP
0 Tr
/_Helvetica 11.6789 Tf
(-) Tx 
(\r) Tx 
TO
q304.6406 271.1133 m
333.6777 271.1133 l
333.6777 258.1543 l
304.6406 258.1543 l
HWN0 To
1 0 0 1 304.6406 260.6738 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
-1 Tt
-0.0117 Tc
(gram) Tx 
(\r) Tx 
TO
Q0 A
0 To
1 0 0 1 288.4419 247.2354 0 Tp
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M []0 d/_Helvetica 11.6789 Tf
0 Ts
100 Tz
-1 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
-0.0117 Tc
0 Tw
(LM) Tx 
(\r) Tx 
TO
*u
0.0235 0.0196 0.0196 0.9922 k
173.8511 444.8594 m
173.8511 428.3008 l
173.8511 428.1807 173.7314 427.9404 173.4912 427.9404 c
173.3711 427.9404 173.1313 428.1807 173.1313 428.3008 c
173.1313 444.8594 l
173.1313 445.0986 173.2515 445.2188 173.4912 445.2188 c
173.7314 445.2188 173.8511 445.0986 173.8511 444.8594 c
173.8511 444.8594 l
f168.6919 443.8994 m
173.4912 449.7783 l
178.4111 443.8994 l
168.6919 443.8994 l
f178.4111 429.3799 m
173.4912 423.501 l
168.6919 429.2607 l
178.4111 429.3799 l
f*U
*u
252.3247 466.9375 m
222.207 466.8174 l
221.9673 466.8174 221.8472 467.0566 221.8472 467.1768 c
221.8472 467.417 221.9673 467.5371 222.207 467.5371 c
252.3247 467.6572 l
252.5645 467.6572 252.6846 467.5371 252.6846 467.2969 c
252.6846 467.0566 252.5645 466.9375 252.3247 466.9375 c
252.3247 466.9375 l
f223.167 462.3779 m
217.2876 467.1768 l
223.167 472.0967 l
223.167 462.3779 l
f*U
*u
129.6948 466.9375 m
112.1763 466.9375 l
112.5361 467.2969 l
112.5361 335.9082 l
112.1763 336.2676 l
124.8955 336.2676 l
125.1353 336.2676 125.2554 336.1484 125.2554 335.9082 c
125.2554 335.668 125.1353 335.5479 124.8955 335.5479 c
112.1763 335.5479 l
111.9365 335.5479 111.8164 335.668 111.8164 335.9082 c
111.8164 467.2969 l
111.8164 467.5371 111.9365 467.6572 112.1763 467.6572 c
129.6948 467.6572 l
129.9351 467.6572 130.0547 467.5371 130.0547 467.2969 c
130.0547 467.0566 129.9351 466.9375 129.6948 466.9375 c
129.6948 466.9375 l
f123.9355 340.708 m
129.6948 335.9082 l
123.9355 330.9883 l
123.9355 340.708 l
f*U
*u
217.2876 336.2676 m
247.5249 336.2676 l
247.645 336.2676 247.8853 336.0283 247.8853 335.7881 c
247.8853 335.668 247.645 335.4277 247.5249 335.4277 c
217.2876 335.5479 l
217.0479 335.5479 216.9277 335.668 216.9277 335.9082 c
216.9277 336.1484 217.0479 336.2676 217.2876 336.2676 c
217.2876 336.2676 l
f246.4453 340.708 m
252.3247 335.7881 l
246.4453 330.9883 l
246.4453 340.708 l
f*U
*u
374.9541 335.5479 m
344.8369 335.4277 l
344.5967 335.4277 344.4775 335.668 344.4775 335.7881 c
344.4775 336.0283 344.5967 336.2676 344.8369 336.2676 c
374.9541 336.2676 l
375.1943 336.2676 375.3145 336.1484 375.3145 335.9082 c
375.3145 335.668 375.1943 335.5479 374.9541 335.5479 c
374.9541 335.5479 l
f345.7969 330.9883 m
339.917 335.7881 l
345.7969 340.708 l
345.7969 330.9883 l
f*U
*u
296.481 318.3896 m
296.6011 288.1514 l
296.6011 287.9121 296.3608 287.792 296.1211 287.792 c
296.001 287.792 295.7612 287.9121 295.7612 288.1514 c
295.7612 318.3896 l
295.7612 318.6289 295.8809 318.749 296.1211 318.749 c
296.3608 318.749 296.481 318.6289 296.481 318.3896 c
296.481 318.3896 l
f301.041 289.1113 m
296.2412 283.2324 l
291.3213 289.1113 l
301.041 289.1113 l
f*U
*u
462.5469 467.6572 m
480.0654 467.6572 l
479.7061 467.2969 l
479.7061 502.334 l
480.0654 501.9746 l
173.4912 501.9746 l
173.8511 502.334 l
173.8511 489.6152 l
173.8511 489.4951 173.7314 489.2549 173.4912 489.2549 c
173.2515 489.2549 173.1313 489.4951 173.1313 489.6152 c
173.1313 502.334 l
173.1313 502.5742 173.2515 502.6943 173.4912 502.6943 c
480.0654 502.6943 l
480.3057 502.6943 480.4258 502.5742 480.4258 502.334 c
480.4258 467.2969 l
480.4258 467.0566 480.3057 466.9375 480.0654 466.9375 c
462.5469 466.9375 l
462.4268 466.9375 462.1875 467.0566 462.1875 467.2969 c
462.1875 467.5371 462.4268 467.6572 462.5469 467.6572 c
462.5469 467.6572 l
f178.4111 490.6953 m
173.4912 484.8154 l
168.6919 490.6953 l
178.4111 490.6953 l
f*U
*u
217.2876 406.3418 m
247.5249 406.2227 l
247.645 406.2227 247.8853 406.1025 247.8853 405.8623 c
247.8853 405.6221 247.645 405.502 247.5249 405.502 c
217.2876 405.6221 l
217.0479 405.6221 216.9277 405.7422 216.9277 405.9824 c
216.9277 406.2227 217.0479 406.3418 217.2876 406.3418 c
217.2876 406.3418 l
f246.5654 410.7822 m
252.3247 405.8623 l
246.4453 401.0625 l
246.5654 410.7822 l
f*U
U%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF
