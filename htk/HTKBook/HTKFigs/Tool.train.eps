%!PS-Adobe-2.0 EPSF-1.2
%%Title: Tool.train.eps
%%Creator: CLARIS EPSF Export Filter V1.0
%%CreationDate:6/24/95  8:44:01 a.m.
%%BoundingBox: 44.000 500.262 390.797 762.262                                                          
%%QDBoundingBox: 44.000 29.737 390.797 291.737                                                           
%%DocumentFonts: Times-Bold
%%+ Times-Roman
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%ObjectsIncluded: tText=T tLine=T tRect=T tRRect=F tOval=T tArc=F tFree=T tPoly=T tBMap=F tNote=F tBez=T tPMap=F 
%%AttributesIncluded: kBaWPattType=T kPixPattType=T kGradientType=F 
%%EndComments
/MAV 300 dict def
MAV begin 
/useClip true def 
/top    0 def 
/left   1 def 
/bottom 2 def 
/right  3 def 
/CM     6 array def 
/CTM    6 array def 
/CTMR   6 array def 
/MTC    6 array def 
/blimit 1500 def 
/bcnt   0 def 
/rbox 8 array def 
/segbox 8 array def 
/bbox1 4 array def 
/c1 3 array def 
/c2 3 array def 
/d 3 array def    
/delta 3 array def 
/mycurrentrgbcolor 3 array def 
/ulx 0 def 
/uly 1 def 
/llx 2 def 
/lly 3 def 
/urx 4 def 
/ury 5 def 
/lrx 6 def 
/lry 7 def 
/sp [0 0] def 
/ep [0 0] def 
/bbox 4 array def 
/pbox 4 array def 
/scrnProc currentscreen 3 1 roll pop pop def
/currentcolorscreen where {
begin
currentcolorscreen
end
3 1 roll pop pop 
4 2 roll pop pop 
5 -2 roll pop pop 
6 -2 roll pop pop 
/kProc exch def 
/bProc exch def 
/gProc exch def 
/rProc exch def 
} if 
/Max {2 copy gt {pop}{exch pop} ifelse} bind def
/cellPenW 72.0 /currentcolorscreen where
{begin currentcolorscreen end pop pop
10 1 roll pop pop 8 1 roll pop pop
 6 1 roll pop pop Max Max Max }
{currentscreen pop pop} ifelse div 2.0 div def
%%BeginProcSet : rect 
/rect { 
 /saveobj save def 
 R PC PF LC SS 
 saveobj restore 
} bind def 
%%EndProcSet 
%%BeginProcSet : R 
/R { 
 newpath
 pbox astore pop
 0 792 translate 1 -1 scale CTMR currentmatrix pop exch translate
 /objectCord mstore def
 pbox right get 2 div
 dup pbox left get exch sub
 pbox left 3 -1 roll put 
 dup pbox right 3 -1 roll put
 pbox bottom get 2 div 
 dup pbox top get exch sub
 pbox top 3 -1 roll put
 dup pbox bottom 3 -1 roll put
 translate 
 CTM currentmatrix pop
 57.3 mul rotate
 RT
} bind def
%%EndProcSet
%%BeginProcSet : SaveScreenBW
 /SaveScreenBW {
 currentscreen
 /scrnProc exch def
 /scrnAngle exch def
 /scrnFreq exch def
  } bind def
%%EndProcSet
%%BeginProcSet : RestoreScreenBW
 /RestoreScreenBW {
 scrnFreq scrnAngle MAV /scrnProc get setscreen
 } bind def
%%EndProcSet
%%BeginProcSet : SetFreqAngleBW
 /SetFreqAngleBW {
 currentscreen
 3 1 roll
 pop pop
 setscreen
 } bind def
%%EndProcSet
%%BeginProcSet : SaveScreenColor 
 /SaveScreenColor {
 currentcolorscreen
 /grayProc exch def
 /grayAngle exch def
 /grayFreq exch def
 /bProc exch def
 /bAngle exch def
 /bFreq exch def
 /gProc exch def
 /gAngle exch def
 /gFreq exch def
 /rProc exch def
 /rAngle exch def
 /rFreq exch def
  } bind def
%%EndProcSet
%%BeginProcSet : RestoreColorScreen
 /RestoreColorScreen {
 rFreq rAngle MAV /rProc get gFreq gAngle MAV /gProc get bFreq bAngle MAV /bProc get grayFreq grayAngle MAV /grayProc get setcolorscreen
 } bind def
%%EndProcSet
%%BeginProcSet : SetFreqAngleColor
 /SetFreqAngleColor { 
 currentcolorscreen 
 3 1 roll pop pop
 4 2 roll pop pop
 5 -2 roll pop pop
 6 -2 roll pop pop
 4 1 roll 
 6 1 roll 
 8 1 roll 
 10 1 roll 
 setcolorscreen 
 } bind def 
%%EndProcSet 
/initmsaverestore { 
userdict begin 
/mdict 10 dict def 
mdict begin 
/mindex -1 def 
/mstacksize 25 def 
/mstack mstacksize array def 
/incmindex { 
/mindex mindex 1 add def 
} bind def 
/decmindex { 
/mindex mindex 1 sub def 
} bind def 
/checkmindex { 
mindex 0 lt { 
(%ERROR: msave/mrestore stack underflow: Offending command 'mrestore'
) print flush 
stop 
} 
{ 
mindex mstacksize ge { 
(%ERROR: msave/mrestore stack overflow: Offending command 'msave'
) print flush 
stop 
} if 
} ifelse 
} bind def 
/mpush { 
incmindex 
checkmindex 
mstack mindex 
3 -1 roll put 
} bind def 
/mpop { 
checkmindex 
mstack mindex get 
decmindex 
} bind def 
end 
end 
} bind def 
/msave { 
mdict begin 
matrix currentmatrix mpush 
end 
} bind def 
/mrestore { 
mdict begin 
mpop setmatrix 
end 
} bind def 
/msavelevel { 
mdict begin 
mindex 1 add 
end 
} bind def 
/mstore {
matrix currentmatrix
} bind def
/AutoSizeY {
0 0 pl
dup 3 1 roll
4 -1 roll  
add
pl exch pop
exch sub
} bind def
/pl {  
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bind def
/pll {
transform
round exch
round exch
itransform
} bind def
/pr { 
dtransform
round exch
round exch
idtransform
} bind def
/m { 
pl  moveto
} bind def
/l { 
pl lineto
} bind def
/c { 
pl curveto
} bind def
/rm { 
pr rmoveto
} bind def
/rl { 
pr rlineto
} bind def
/ar { 
5 -2 roll pl
5 2 roll
arc
} bind def
/an { 
5 -2 roll pl
5 2 roll
arcn
} bind def
/MakePatternFont {
/FontDict 20 dict def
FontDict begin
/FontName exch def
/Encoding exch def
/FontMatrix [1 0 0 1 0 0 ] def
/FontType 3 def
/FontBBox [ 0 0 1 1 ] def
/PatternDict exch def
/RenderPattern {
patternDict exch get
exec
} bind def
/BuildChar {
exch begin
1 0 0 0 1 1 setcachedevice
Encoding exch get RenderPattern
end
} bind def
FontName FontDict definefont pop
end
} bind def
/SnapToPattenGrid
	{
	exch
	dup 0 lt {
		1 index sub
	} if
	1 index
	div truncate
	mul
} bind def
/FillPatternString {
dup length
1 sub
0 1 3 -1 roll {
2 index
2 index
3 -2 roll
put
} for
pop pop
} bind def
/AutoSizeY {
	0.0 exch dtransform
	round
	idtransform exch pop
} bind def
 /AutoSizeX {
	0.0 dtransform
	exch
	round
	exch
	idtransform pop
} bind def 
/AutoCellSize {
	AutoSizeY
	exch
	AutoSizeX
	exch
} bind def
/CheckPath {
	false
	{ pop pop pop true exit}
	{ pop pop pop true exit}
	{ pop pop pop pop pop pop pop true exit}
	{ pop true exit}
	pathforall
} bind def
/PatternFill {					%		patternCharacter
	/patternString 1 string def
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/patternSize exch 24.0 mul def
	/PatternSizeX exch 24.0 mul patternString length mul def
	/flaterror 0 def
	patternString FillPatternString
	gsave
		flaterror 1 add setflat
		flattenpath
		pathbbox
	grestore
	psy add flaterror add psy SnapToPattenGrid
	exch psx add flaterror add psx SnapToPattenGrid
	3 -1 roll flaterror sub psy SnapToPattenGrid
	4 -1 roll flaterror sub psx SnapToPattenGrid
	4 2 roll pll
	4 2 roll pll
	/llxsnap exch def
	/llysnap exch def
	/urxsnap exch def
	/urysnap exch def
	gsave
		useClip true eq {clip}{eoclip} ifelse newpath
		/PatternFont findfont [psx 0.0 0.0 psy 0.0 0.0] makefont setfont
		llysnap patternSize urysnap {
			llxsnap exch moveto
			llxsnap PatternSizeX urxsnap {
				pop
				patternString show
				%currentpoint am
			} for
		} bind for
	grestore
	cm setmatrix
} bind def				%		End 'PatternFill'
/DefaultPatternFont {
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/psy exch iSizeY mul def
	/psx exch iSizeX mul def
	/patternDict 64 dict def
	patternDict begin
		/NotDef {} def
		/LiteDiagLines {
			iSizeX iSizeY false [iSizeX 0.0 0.0 iSizeY -1.0 mul  0.0 iSizeY]
			{pat}
			imagemask
		} bind def
	end
	/CustEncoding 256 array def
	0 255 1 {
		CustEncoding exch /NotDef put
	} bind for
	CustEncoding 65 /LiteDiagLines put
	patternDict CustEncoding /PatternFont MakePatternFont
	/pathSegProc {
		strokepath
		CheckPath {
			65 PatternFill newpath
		} if
	} bind def
	cm setmatrix
} bind def
/XRound {
	dup
	3 -1 roll
	exch mul round
	exch div
} bind def
/RoundMatrix {
	/i 0 def
	dup {
		100000.0 XRound
		1 index
		exch i exch put
		/i i 1 add def
	} forall
} bind def
/GetBoxesRatio {
3 -1 roll sub
7 1 roll
exch sub
6 1 roll
3 -1 roll sub
5 1 roll
exch sub
4 1 roll
3 -1 roll div
3 1 roll
exch div
exch
} bind def
%%BeginProcSet : Text Attributes Procs
/T {792 exch sub} bind def
/sx 0 def
/sy 0 def
/ex 0 def
/ey 0 def
/lw  0 def
/siz 0 def
/U {gsave 0 setlinecap
/lw siz 0.078125 mul def  /ey exch neg def /ex exch def /sy exch neg def /sx exch def
fontkind plain eq 
 {
  lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
 }
 {
   currentdict /outlineFontSize known outlineFontSize 0 gt and
     {
       fontkind outline eq
         {
           /sy sy 0.0119444 siz mul sub def
           /ey ey 0.0119444 siz mul sub def
           gsave 
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
       fontkind shadow eq fontkind outlineshadow eq or
         {
           /sy sy 0.0358332 siz mul sub def
           /ey ey 0.0358332 siz mul sub def
           lw setlinewidth
           lw 2 div sx add sy
           lw 2 div sub moveto
           lw 2 div ex add ey
           lw 2 div sub lineto stroke 
           gsave
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
      } if
 } ifelse
grestore} bind def
/plain 1 def
/outline 2 def
/shadow 3 def
/outlineshadow 4 def
/fess {
	currentdict /outlineFontSize known {
		/outlineFontSize 2 index def
	} if
	findfont exch dup /siz exch def scalefont setfont
} bind def
/SHDW {gsave siz oldfontname fess siz 0.055 mul x add y siz 0.05 mul sub moveto c show grestore} def
/NRML {gsave 1 1 1 setrgbcolor siz oldfontname fess x y moveto c show grestore siz /Outline fess  x y moveto c show} def
/S {
fontkind plain eq {neg moveto show} if
fontkind outline eq {neg /y exch def /x exch def /c exch def NRML} if
fontkind shadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
fontkind outlineshadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
} bind def
/F {
/fontkind exch def
fontkind plain eq {fess} if
fontkind outline eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind shadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind outlineshadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
} bind def
/makeoutlinedict 15 dict def
/makeoutlinefont
 {
  makeoutlinedict begin
   /uniqueid exch def
   /strokewidth exch def
   /newfontname exch def
   /basefontname exch def
   /basefontdict basefontname findfont def
   /numentries basefontdict maxlength 1 add def
   basefontdict /UniqueID known not
   {/numentries numentries 1 add def} if
   /outfontdict numentries dict def
   basefontdict
   {
     exch dup /FID ne {exch outfontdict 3 1 roll put} {pop pop} ifelse
	  }forall
   outfontdict /FontName newfontname put
   outfontdict /PaintType 2 put
   outfontdict /StrokeWidth strokewidth put
   outfontdict /UniqueID uniqueid put
   newfontname outfontdict definefont pop
  end
  }def
/UID {
 findfont dup /UniqueID known
  {/UniqueID get 1 add}
  {pop 1}
  ifelse
} def
/OLF {
dup
/Outline
1000 62 div
4 -1 roll
UID
/outlineFontSize 5 index def
makeoutlinefont
/Outline findfont exch scalefont setfont
} def
/CopyEncoding {
findfont
/Encoding get
dup length array
/tarrayz exch def
tarrayz 0
3 -1 roll
putinterval
tarrayz
} bind def
/Re-encode {
dup length array copy
/eap 0 def
exch {
dup type /integertype eq {
/eap exch def
} {
1 index
exch
eap exch
put
/eap eap 1 add def
} ifelse
} forall
} bind def
/EncodeFont	{
findfont dup
length dict
begin
{	1 index /FID ne
{ def }
{ pop pop } ifelse
} forall
/FontName exch def
/Encoding exch def
FontName currentdict
end
definefont pop
} bind def
%%EndProcSet
%%BeginProcSet : clip2pathbbox
/clip2pathbbox {
	/magicNum linewidth 2 div 1 2 sqrt div mul def
	pathbbox
	/urymn exch magicNum add def
	/urxmn exch magicNum add def
	/llymn exch magicNum sub def
	/llxmn exch magicNum sub def
	newpath llxmn llymn moveto llxmn urymn lineto urxmn urymn lineto urxmn llymn lineto
	closepath clip newpath
} bind def
%%EndProcSet 
%% Line takes the following arguments:
%% linewidth xEnd yEnd xStart yStart
%%BeginProcSet : Line
/Line {
MAV /LC get length 0 ne
{
	gsave
			newpath
			MAV /ArrowType get length 0 eq
			MAV /SD get length 0 eq and
			{2 setlinecap /UseClip {clip2pathbbox} def }
			{0 setlinecap /UseClip {} def } ifelse
			0 792 translate
			1 -1 scale
			CTM currentmatrix pop
			/yStart exch def /xStart exch def /yEnd exch def /xEnd exch def /linewidth exch def
			MAV /ArrowType get length 0 eq xStart xEnd ne yStart yEnd ne and and
			{xStart yStart moveto xEnd yEnd lineto UseClip xStart yStart moveto xEnd yEnd lineto}
			{xStart yStart moveto xEnd yEnd lineto} ifelse
			linewidth setlinewidth SD strokepath
			CheckPath {LC PF ArrowType} if
	grestore
}
{pop pop pop pop pop} ifelse
} bind def
/CompensateForStroke {
	sin currentlinewidth mul
	exch
	cos currentlinewidth mul
	dup 0 translate
	4 -1 roll exch 2.0 mul sub
	3 1 roll
	2.0 mul sub
} bind def
/arrowdict 10 dict def
arrowdict begin
	/SwallowTail {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		.666 0.0 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/Triangular {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/OpenTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
	} bind def
	/ClosedTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
		closepath
	} bind def
	/SlashBar {
		newpath
		0.5 -.5 moveto
		-.5 0.5 lineto
	} bind def
	/Dot {
		newpath
		0.5 0.0 moveto
		0 0 1 0 360 arc
		closepath
	} bind def
	/ExtSlashBar {
		newpath
		1.0 -.5 moveto
		0.0 0.5 lineto
	} bind def
end
/ScaleArrowHead {
	0 0 4 -2 roll
	0 0 1 1
	8 -4 roll GetBoxesRatio
	scale
} bind def
/DrawArrowHead {
	gsave
	[] 0 setdash
	currentpoint translate rotate
	{
		4 copy
		gsave
			initmatrix
			100 200 translate
			msave
				ScaleArrowHead pop
				arrowdict exch get exec
			mrestore
			strokepath
			0 0 3 index 3 index
			pathbbox 8 4 roll
			GetBoxesRatio
			4 2 roll
		grestore
		3 index 1.0 exch sub
		6 -1 roll
		{
			2 index mul
			0 translate
		}{
			pop
		} ifelse
		msave
			ScaleArrowHead scale
			arrowdict exch get exec
		mrestore
		strokepath
	} {
		msave
		ScaleArrowHead
		arrowdict exch get exec
		mrestore
	} ifelse
		CheckPath {
			LC PF
		} if
	grestore
} bind def
%%EndProcSet 
%%BeginProcSet : SR 
/SR { 
 pbox left get pbox top get moveto 
 pbox right get pbox top get lineto 
 pbox right get pbox bottom get lineto 
 pbox left get pbox bottom get lineto 
 closepath
} bind def 
%%EndProcSet 
%%BeginProcSet : E
/E {
1.415 setmiterlimit
CM currentmatrix pop
pbox right get pbox left get sub abs dup
pbox bottom get pbox top get sub abs dup 3 -1 roll
lt {exch dup 3 -1 roll exch div 1 exch}
{dup 3 -1 roll exch div 1} ifelse scale 
0 0 3 -1 roll 2 div 0 360 arc closepath
CM setmatrix
} bind def
%%EndProcSet



/StripFromFront { 
dup length
2 index sub
3 1 roll
exch 3 -1 roll
getinterval
} bind def
/MakePathArray { 
 /k 0 def 
 {/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{/k k 1 add def }pathforall 
 k array
 /k 0 def 
 {{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{curveto} 7 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{closepath} 1 array astore 1 index k 3 -1 roll put /k k 1 add def} 
pathforall 
}bind def 
/MakeFlatPathArray { 
/k 0 def 
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{pop pop pop pop pop pop}{}pathforall 
k array
/k 0 def 
{{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{ pop pop pop pop pop pop} 
{} 
pathforall 
}bind def 
/FractionalLine {
2 index sub
.00001 mul
exch
3 index sub
.00001 mul
4 -1 roll add
3 1 roll
add
} bind def
/calcLineLength {
 exch
 4 -1 roll
 sub
 dup mul
 3 1 roll exch
 sub
 dup mul
 add sqrt
} bind def
/InitTotalLineLength {
 /oldY exch def
 /oldX exch def
 theDash aload pop currentLineLength add setdash
} bind def
/AccumeLineLength {
 3 copy pop
 2 copy
 oldX oldY
 4 2 roll calcLineLength
 /segmentLength exch def
 /currentLineLength currentLineLength segmentLength add def
 /oldY exch def
 /oldX exch def
} bind def
/DecumeLastLineLength {
 /currentLineLength currentLineLength segmentLength sub def
} bind def
/DrawFlattendSegment {
 /pointCount 2 def
 dup 0 lt { pop 0 } if
 fpc
 3 1 roll
 2 index
 1 index
 gt {
 2 copy get
 dup length
 dup 3 eq {
 pop
 dup 0 get
 exch 1 get
 2 copy InitTotalLineLength  
 m
 } {
 } ifelse
 } {
 pop 1 index
 } ifelse
 dup 1 add
 3 index
 exch sub
 dup 10 gt { pop 10} if
 {
 1 add
 2 copy
 get aload pop
 AccumeLineLength
 exec
 } repeat
 3 1 roll pop pop
 DecumeLastLineLength
} bind def
/IncFPC {
 fpc add
 /fpc exch def
} bind def
/DrawFlatPathArray {
 fpc
 0 { 
 dup 2 index
 1 sub
 lt { 
 flatPathArray exch
 newpath
 1 sub DrawFlattendSegment
 gsave
 pathSegProc
 grestore
 newpath
 }
 {
 pop pop
 exit
 } ifelse
 } loop
} bind def
/RecordFirstSubSegment {
 closepathArray 0 pathArray 0 get
 put
 closepathArray 1
 pathArray 0 get aload pop pop
 pathArray 1 get dup length 3 eq {
 aload pop pop
 } {
 newpath
 0 0 moveto
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 segmentArray 1 get aload pop pop
 } ifelse
 FractionalLine {lineto} 3 array astore
 put
} bind def
/AppendClosePath {
 closepathArray 0 get 2 {lineto} put
 flatPathArray fpc closepathArray 0 get put
 1 IncFPC
 flatPathArray fpc closepathArray 1 get put
 1 IncFPC
} bind def
/RecordCurrentDash {
 /theDash
 currentdash 2 array astore def
 /currentLineLength 0 def
} bind def
/PatternStroke {
	0 setlinecap
 RecordCurrentDash
 /saveFlat currentflat def
 .5 setflat
 /pathArray MakePathArray def
 /closepathArray 2 array def
 /pathLength pathArray length def
 /flatPathArray 513 array def
 /currentLineLength 0 def
 /fpc 0 def
 pathArray pathLength 1 sub get
 length 1 eq {
 /usingClosepath true def
 RecordFirstSubSegment
 /pathLength pathLength 1 sub def
 } {
 /usingClosepath false def
 } ifelse
 0 1 pathLength 1 sub {
 pathArray exch get
 dup length 3 eq {
 fpc 1 add 512 ge {
 DrawFlatPathArray
 fpc 2 ge {
 flatPathArray flatPathArray fpc 2 sub get 0 put
 flatPathArray flatPathArray fpc 1 sub get 1 put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } if
 flatPathArray exch fpc exch put
 1 IncFPC
 } {
 dup length 7 eq {
 newpath
 /nToStrip 0 def
 fpc 1 gt {
 flatPathArray fpc 2 sub get aload pop pop m
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } {
 fpc 1 eq {
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } if
 } ifelse
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 /segmentArray nToStrip segmentArray StripFromFront def
 segmentArray length fpc add 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 segmentArray length 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 segmentArray length
 /exitLoop false def
 0 
 {
 2 copy sub
 dup 500 gt {
 pop 500
 } { 
 /exitLoop true def
 } ifelse 
 segmentArray 2 index 2 index getinterval
 flatPathArray fpc 3 -1 roll putinterval
 dup IncFPC
 add 
 exitLoop {
 exit 
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } ifelse
 } loop
 } ifelse
 } ifelse
 } if
 } ifelse
 } for
 fpc 0 gt {
 usingClosepath {
 AppendClosePath
 } if
 DrawFlatPathArray
 } if
 saveFlat setflat
} bind def


%%EndProlog
initmsaverestore
/tctm matrix currentmatrix def
tctm RoundMatrix setmatrix
/patternMatrix mstore def
10 setmiterlimit
2 setlinecap
newpath
%
%tLayer
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.199 setcmykcolor end} {0.800 0.800 0.800 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 126.000 45.000 0.000 0.000 90.000 162.000 rect
%@EndRect
%@BeginText
save
%%IncludeFont: Times-Bold
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Bold /Times-Bold EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 146.500 61.500 0.000 0.000 39.000 132.551 rect
%@EndRect
gsave
127.775 166.000 T translate
0.0 rotate
1 1 scale
18.000 (_Times-Bold) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(H) -66.000 -4.000 S
(C) -51.999 -4.000 S
13.000 (_Times-Bold) fess
(O) -39.000 -4.000 S
(M) -28.499 -4.000 S
(P) -15.757 -4.000 S
18.000 (_Times-Bold) fess
(V) -7.510 -4.000 S
( ) 5.488 -4.000 S
(/) 9.988 -4.000 S
( ) 14.989 -4.000 S
(H) 19.489 -4.000 S
(I) 33.489 -4.000 S
13.000 (_Times-Bold) fess
(N) 40.494 -4.000 S
(I) 50.244 -4.000 S
(T) 55.497 -4.000 S
18.000 (_Times-Bold) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(H) -66.000 15.000 S
(R) -51.999 15.000 S
13.000 (_Times-Bold) fess
(E) -39.000 15.000 S
(S) -29.995 15.000 S
(T) -22.487 15.000 S
18.000 (_Times-Bold) fess
( ) -13.483 15.000 S
(/) -8.983 15.000 S
( ) -3.982 15.000 S
(H) 0.517 15.000 S
(E) 14.518 15.000 S
(R) 26.524 15.000 S
13.000 (_Times-Bold) fess
(E) 39.523 15.000 S
(S) 48.528 15.000 S
(T) 56.036 15.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.199 setcmykcolor end} {0.800 0.800 0.800 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 108.000 45.000 0.000 0.000 18.000 180.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 18.000] CP
[27.000 0.000] CP
[180.000 0.000 ] CP
[162.000 18.000 ] CP
[162.000 18.000 0.000 18.000 0.000 18.000] CP
closepath
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.199 setcmykcolor end} {0.800 0.800 0.800 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
2.000 0 108.000 207.000 0.000 0.000 108.000 18.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[18.000 0.000] CP
[18.000 90.000] CP
[0.000 108.000 ] CP
[0.000 18.000 ] CP
[0.000 18.000 18.000 0.000 18.000 0.000] CP
closepath
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
2.000 setlinewidth
135.000 117.000 moveto
/Triangular 16.799 8.399 false 270.019 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
2.000 134.999 113.000 135.000 81.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
2.000 setlinewidth
135.000 243.000 moveto
/Triangular 16.799 8.399 false 270.019 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
2.000 134.999 239.000 135.000 216.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
2.000 setlinewidth
217.000 159.000 moveto
/Triangular 16.799 8.399 false 320.500 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
2.000 220.085 156.454 257.000 126.000 Line
%@EndLine
%
%tfBegGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.199 setcmykcolor end} {0.800 0.800 0.800 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 274.570 64.500 0.000 0.000 15.000 13.935 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 246.237 94.280 0.000 0.000 31.500 12.890 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.199 setcmykcolor end} {0.800 0.800 0.800 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 273.237 92.370 0.000 0.000 17.999 17.187 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
126.745 282.237 moveto
/Triangular 8.224 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 125.578 282.237 109.558 282.237 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
94.280 264.237 moveto
/Triangular 8.224 7.049 false 274.980 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 94.381 263.075 94.758 258.737 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 246.237 128.654 0.000 0.000 31.500 12.890 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.199 setcmykcolor end} {0.800 0.800 0.800 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 273.237 126.745 0.000 0.000 17.999 17.187 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
161.119 282.237 moveto
/Triangular 8.224 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 159.952 282.237 143.932 282.237 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
128.654 264.237 moveto
/Triangular 8.224 7.049 false 274.980 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 128.755 263.075 129.132 258.737 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 246.237 163.029 0.000 0.000 31.500 12.890 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.199 setcmykcolor end} {0.800 0.800 0.800 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 273.237 161.119 0.000 0.000 17.999 17.187 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
195.493 282.237 moveto
/Triangular 8.224 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 194.326 282.237 178.306 282.237 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
163.029 264.237 moveto
/Triangular 8.224 7.049 false 274.980 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 163.129 263.075 163.506 258.737 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
92.370 282.348 moveto
/Triangular 8.224 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 91.204 282.348 78.435 282.348 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.199 setcmykcolor end} {0.800 0.800 0.800 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 274.570 194.564 0.000 0.000 15.000 13.935 rect
%@EndOval
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 58.570 64.500 0.000 0.000 15.000 13.935 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 30.237 94.280 0.000 0.000 31.500 12.890 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 57.237 92.370 0.000 0.000 17.999 17.187 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
126.745 66.237 moveto
/Triangular 8.224 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 125.578 66.237 109.558 66.237 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
94.280 48.237 moveto
/Triangular 8.224 7.049 false 274.980 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 94.381 47.075 94.758 42.737 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 30.237 128.654 0.000 0.000 31.500 12.890 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 57.237 126.745 0.000 0.000 17.999 17.187 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
161.119 66.237 moveto
/Triangular 8.224 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 159.952 66.237 143.932 66.237 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
128.654 48.237 moveto
/Triangular 8.224 7.049 false 274.980 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 128.755 47.075 129.132 42.737 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 30.237 163.029 0.000 0.000 31.500 12.890 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 57.237 161.119 0.000 0.000 17.999 17.187 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
195.493 66.237 moveto
/Triangular 8.224 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 194.326 66.237 178.306 66.237 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
163.029 48.237 moveto
/Triangular 8.224 7.049 false 274.980 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 163.129 47.075 163.506 42.737 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
92.370 66.348 moveto
/Triangular 8.224 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 91.204 66.348 78.435 66.348 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 0.000 setcmykcolor end} {1.000 1.000 1.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
1.000 0 58.570 194.564 0.000 0.000 15.000 13.935 rect
%@EndOval
%
%tfEndGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 52.096 246.000 0.000 0.000 14.332 15.358
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 6.708] CP
[0.356 2.236 0.734 0.152 1.135 0.457] CP
[1.535 0.762 1.891 2.032 2.203 4.269] CP
[2.515 6.505 3.027 8.741 3.739 10.978] CP
[4.451 13.214 4.985 13.925 5.341 13.112] CP
[5.698 12.299 6.009 10.927 6.276 8.995] CP
[6.543 7.064 6.922 5.489 7.411 4.269] CP
[7.901 3.049 8.369 3.252 8.814 4.879] CP
[9.259 6.505 9.570 7.826 9.748 8.843] CP
[9.927 9.859 10.416 9.453 11.218 7.623] CP
[12.019 5.793 12.842 5.184 13.688 5.793] CP
[14.534 6.403 15.090 6.607 15.358 6.403] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 50.571 261.491 0.000 0.000 12.807 17.761
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 7.949] CP
[0.530 7.655 0.972 7.164 1.325 6.477] CP
[1.678 5.790 1.955 5.177 2.153 4.637] CP
[2.352 4.097 2.551 3.336 2.750 2.355] CP
[2.949 1.374 3.203 0.736 3.512 0.441] CP
[3.821 0.147 4.131 0.417 4.440 1.251] CP
[4.749 2.085 4.992 2.968 5.169 3.901] CP
[5.346 4.833 5.489 5.422 5.600 5.667] CP
[5.710 5.913 5.832 6.501 5.964 7.434] CP
[6.097 8.366 6.351 9.397 6.726 10.525] CP
[7.102 11.654 7.389 12.316 7.588 12.513] CP
[7.787 12.709 8.052 12.734 8.383 12.586] CP
[8.715 12.439 8.936 12.194 9.046 11.850] CP
[9.157 11.507 9.344 10.746 9.609 9.568] CP
[9.875 8.391 10.129 7.458 10.372 6.771] CP
[10.615 6.084 10.802 5.446 10.935 4.858] CP
[11.068 4.269 11.222 4.293 11.399 4.931] CP
[11.576 5.569 11.763 6.305 11.962 7.139] CP
[12.161 7.974 12.404 8.563 12.691 8.906] CP
[12.978 9.250 13.188 8.931 13.321 7.949] CP
[13.453 6.968 13.575 6.133 13.685 5.446] CP
[13.796 4.759 13.995 4.759 14.282 5.446] CP
[14.569 6.133 14.823 6.919 15.044 7.802] CP
[15.265 8.685 15.486 9.176 15.707 9.274] CP
[15.928 9.372 16.116 9.053 16.270 8.317] CP
[16.425 7.581 16.668 7.090 16.999 6.845] CP
[17.331 6.600 17.585 6.870 17.761 7.655] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%
%tfEndGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 51.920 279.405 0.000 0.000 12.483 23.991
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 5.584] CP
[0.909 1.861 1.524 0.766 1.845 2.299] CP
[2.166 3.832 2.487 5.201 2.808 6.405] CP
[3.129 7.610 3.410 7.336 3.650 5.584] CP
[3.891 3.832 4.065 2.737 4.172 2.299] CP
[4.279 1.861 4.520 2.628 4.894 4.599] CP
[5.268 6.570 5.536 8.376 5.696 10.019] CP
[5.857 11.662 6.111 11.771 6.459 10.347] CP
[6.806 8.924 7.248 7.008 7.783 4.599] CP
[8.317 2.190 8.719 1.149 8.986 1.478] CP
[9.254 1.806 9.494 2.628 9.708 3.942] CP
[9.922 5.256 10.216 5.967 10.591 6.077] CP
[10.965 6.186 11.313 5.967 11.634 5.420] CP
[11.955 4.872 12.262 4.872 12.557 5.420] CP
[12.851 5.967 13.132 6.132 13.399 5.913] CP
[13.667 5.694 14.081 5.858 14.643 6.405] CP
[15.205 6.953 15.673 7.172 16.047 7.062] CP
[16.421 6.953 16.769 6.679 17.090 6.241] CP
[17.411 5.803 17.719 5.310 18.013 4.763] CP
[18.307 4.215 18.601 4.270 18.895 4.927] CP
[19.190 5.584 19.524 6.077 19.898 6.405] CP
[20.273 6.734 20.647 6.624 21.022 6.077] CP
[21.396 5.529 21.731 5.420 22.025 5.748] CP
[22.319 6.077 22.974 6.241 23.991 6.241] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 52.096 303.245 0.000 0.000 14.332 15.358
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 6.708] CP
[0.356 2.236 0.734 0.152 1.135 0.457] CP
[1.535 0.762 1.891 2.032 2.203 4.269] CP
[2.515 6.505 3.027 8.741 3.739 10.978] CP
[4.451 13.214 4.985 13.925 5.341 13.112] CP
[5.698 12.299 6.009 10.927 6.276 8.995] CP
[6.543 7.064 6.922 5.489 7.411 4.269] CP
[7.901 3.049 8.369 3.252 8.814 4.879] CP
[9.259 6.505 9.570 7.826 9.748 8.843] CP
[9.927 9.859 10.416 9.453 11.218 7.623] CP
[12.019 5.793 12.842 5.184 13.688 5.793] CP
[14.534 6.403 15.090 6.607 15.358 6.403] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 50.571 318.736 0.000 0.000 12.807 17.761
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 7.949] CP
[0.530 7.655 0.972 7.164 1.325 6.477] CP
[1.678 5.790 1.955 5.177 2.153 4.637] CP
[2.352 4.097 2.551 3.336 2.750 2.355] CP
[2.949 1.374 3.203 0.736 3.512 0.441] CP
[3.821 0.147 4.131 0.417 4.440 1.251] CP
[4.749 2.085 4.992 2.968 5.169 3.901] CP
[5.346 4.833 5.489 5.422 5.600 5.667] CP
[5.710 5.913 5.832 6.501 5.964 7.434] CP
[6.097 8.366 6.351 9.397 6.726 10.525] CP
[7.102 11.654 7.389 12.316 7.588 12.513] CP
[7.787 12.709 8.052 12.734 8.383 12.586] CP
[8.715 12.439 8.936 12.194 9.046 11.850] CP
[9.157 11.507 9.344 10.746 9.609 9.568] CP
[9.875 8.391 10.129 7.458 10.372 6.771] CP
[10.615 6.084 10.802 5.446 10.935 4.858] CP
[11.068 4.269 11.222 4.293 11.399 4.931] CP
[11.576 5.569 11.763 6.305 11.962 7.139] CP
[12.161 7.974 12.404 8.563 12.691 8.906] CP
[12.978 9.250 13.188 8.931 13.321 7.949] CP
[13.453 6.968 13.575 6.133 13.685 5.446] CP
[13.796 4.759 13.995 4.759 14.282 5.446] CP
[14.569 6.133 14.823 6.919 15.044 7.802] CP
[15.265 8.685 15.486 9.176 15.707 9.274] CP
[15.928 9.372 16.116 9.053 16.270 8.317] CP
[16.425 7.581 16.668 7.090 16.999 6.845] CP
[17.331 6.600 17.585 6.870 17.761 7.655] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%
%tfEndGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 51.920 336.650 0.000 0.000 12.483 23.991
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 5.584] CP
[0.909 1.861 1.524 0.766 1.845 2.299] CP
[2.166 3.832 2.487 5.201 2.808 6.405] CP
[3.129 7.610 3.410 7.336 3.650 5.584] CP
[3.891 3.832 4.065 2.737 4.172 2.299] CP
[4.279 1.861 4.520 2.628 4.894 4.599] CP
[5.268 6.570 5.536 8.376 5.696 10.019] CP
[5.857 11.662 6.111 11.771 6.459 10.347] CP
[6.806 8.924 7.248 7.008 7.783 4.599] CP
[8.317 2.190 8.719 1.149 8.986 1.478] CP
[9.254 1.806 9.494 2.628 9.708 3.942] CP
[9.922 5.256 10.216 5.967 10.591 6.077] CP
[10.965 6.186 11.313 5.967 11.634 5.420] CP
[11.955 4.872 12.262 4.872 12.557 5.420] CP
[12.851 5.967 13.132 6.132 13.399 5.913] CP
[13.667 5.694 14.081 5.858 14.643 6.405] CP
[15.205 6.953 15.673 7.172 16.047 7.062] CP
[16.421 6.953 16.769 6.679 17.090 6.241] CP
[17.411 5.803 17.719 5.310 18.013 4.763] CP
[18.307 4.215 18.601 4.270 18.895 4.927] CP
[19.190 5.584 19.524 6.077 19.898 6.405] CP
[20.273 6.734 20.647 6.624 21.022 6.077] CP
[21.396 5.529 21.731 5.420 22.025 5.748] CP
[22.319 6.077 22.974 6.241 23.991 6.241] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%
%tfEndGrp
%
%@BeginText
restore
save
%%IncludeFont: Times-Roman
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Roman /Times-Roman EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 35.500 245.500 0.000 0.000 12.000 107.504 rect
%@EndRect
gsave
299.252 41.500 T translate
0.0 rotate
1 1 scale
10.000 (_Times-Roman) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(t) -53.000 3.000 S
(h) -50.221 3.000 S
( ) -45.221 3.000 S
( ) -42.721 3.000 S
( ) -40.221 3.000 S
(i) -37.721 3.000 S
(h) -34.943 3.000 S
( ) -29.943 3.000 S
( ) -27.443 3.000 S
(s) -24.943 3.000 S
( ) -21.051 3.000 S
( ) -18.551 3.000 S
(i) -16.051 3.000 S
(h) -13.273 3.000 S
( ) -8.273 3.000 S
( ) -5.773 3.000 S
(z) -3.273 3.000 S
( ) 1.165 3.000 S
( ) 3.665 3.000 S
(s) 6.165 3.000 S
( ) 10.056 3.000 S
( ) 12.556 3.000 S
(p) 15.056 3.000 S
( ) 20.056 3.000 S
( ) 22.556 3.000 S
(i) 25.056 3.000 S
(y) 27.834 3.000 S
( ) 32.834 3.000 S
( ) 35.334 3.000 S
(t) 37.834 3.000 S
( ) 40.613 3.000 S
( ) 43.113 3.000 S
(s) 45.613 3.000 S
(h) 49.504 3.000 S
grestore
%@EndText
%
%tfEndGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 97.096 345.283 0.000 0.000 14.332 15.358
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[15.358 6.708] CP
[15.001 2.236 14.623 0.152 14.222 0.457] CP
[13.822 0.762 13.466 2.032 13.154 4.269] CP
[12.842 6.505 12.330 8.741 11.618 10.978] CP
[10.906 13.214 10.372 13.925 10.016 13.112] CP
[9.659 12.299 9.348 10.927 9.081 8.995] CP
[8.814 7.064 8.435 5.489 7.946 4.269] CP
[7.456 3.049 6.988 3.252 6.543 4.879] CP
[6.098 6.505 5.787 7.826 5.609 8.843] CP
[5.430 9.859 4.941 9.453 4.139 7.623] CP
[3.338 5.793 2.515 5.184 1.669 5.793] CP
[0.823 6.403 0.267 6.607 0.000 6.403] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 95.571 327.388 0.000 0.000 12.807 17.761
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[17.761 7.949] CP
[17.231 7.655 16.789 7.164 16.436 6.477] CP
[16.082 5.790 15.806 5.177 15.607 4.637] CP
[15.409 4.097 15.210 3.336 15.011 2.355] CP
[14.812 1.374 14.558 0.736 14.249 0.441] CP
[13.939 0.147 13.630 0.417 13.321 1.251] CP
[13.012 2.085 12.769 2.968 12.592 3.901] CP
[12.415 4.833 12.272 5.422 12.161 5.667] CP
[12.051 5.913 11.929 6.501 11.797 7.434] CP
[11.664 8.366 11.410 9.397 11.034 10.525] CP
[10.659 11.654 10.372 12.316 10.173 12.513] CP
[9.974 12.709 9.709 12.734 9.377 12.586] CP
[9.046 12.439 8.825 12.194 8.715 11.850] CP
[8.604 11.507 8.416 10.746 8.151 9.568] CP
[7.886 8.391 7.632 7.458 7.389 6.771] CP
[7.146 6.084 6.958 5.446 6.826 4.858] CP
[6.693 4.269 6.539 4.293 6.362 4.931] CP
[6.185 5.569 5.997 6.305 5.799 7.139] CP
[5.600 7.974 5.357 8.563 5.070 8.906] CP
[4.782 9.250 4.573 8.931 4.440 7.949] CP
[4.307 6.968 4.186 6.133 4.075 5.446] CP
[3.965 4.759 3.766 4.759 3.479 5.446] CP
[3.192 6.133 2.938 6.919 2.717 7.802] CP
[2.496 8.685 2.275 9.176 2.054 9.274] CP
[1.833 9.372 1.645 9.053 1.491 8.317] CP
[1.336 7.581 1.093 7.090 0.762 6.845] CP
[0.430 6.600 0.176 6.870 0.000 7.655] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%
%tfEndGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 96.920 303.245 0.000 0.000 12.483 23.991
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[23.991 5.584] CP
[23.081 1.861 22.466 0.766 22.145 2.299] CP
[21.824 3.832 21.503 5.201 21.182 6.405] CP
[20.861 7.610 20.580 7.336 20.340 5.584] CP
[20.099 3.832 19.925 2.737 19.818 2.299] CP
[19.711 1.861 19.470 2.628 19.096 4.599] CP
[18.722 6.570 18.454 8.376 18.294 10.019] CP
[18.133 11.662 17.879 11.771 17.531 10.347] CP
[17.184 8.924 16.742 7.008 16.207 4.599] CP
[15.673 2.190 15.271 1.149 15.004 1.478] CP
[14.736 1.806 14.496 2.628 14.282 3.942] CP
[14.068 5.256 13.774 5.967 13.399 6.077] CP
[13.025 6.186 12.677 5.967 12.356 5.420] CP
[12.035 4.872 11.728 4.872 11.433 5.420] CP
[11.139 5.967 10.858 6.132 10.591 5.913] CP
[10.323 5.694 9.909 5.858 9.347 6.405] CP
[8.786 6.953 8.317 7.172 7.943 7.062] CP
[7.569 6.953 7.221 6.679 6.900 6.241] CP
[6.579 5.803 6.271 5.310 5.977 4.763] CP
[5.683 4.215 5.389 4.270 5.095 4.927] CP
[4.800 5.584 4.466 6.077 4.092 6.405] CP
[3.717 6.734 3.343 6.624 2.968 6.077] CP
[2.594 5.529 2.260 5.420 1.965 5.748] CP
[1.671 6.077 1.016 6.241 -0.000 6.241] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%
%tfEndGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 97.096 288.038 0.000 0.000 14.332 15.358
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[15.358 6.708] CP
[15.001 2.236 14.623 0.152 14.222 0.457] CP
[13.822 0.762 13.466 2.032 13.154 4.269] CP
[12.842 6.505 12.330 8.741 11.618 10.978] CP
[10.906 13.214 10.372 13.925 10.016 13.112] CP
[9.659 12.299 9.348 10.927 9.081 8.995] CP
[8.814 7.064 8.435 5.489 7.946 4.269] CP
[7.456 3.049 6.988 3.252 6.543 4.879] CP
[6.098 6.505 5.787 7.826 5.609 8.843] CP
[5.430 9.859 4.941 9.453 4.139 7.623] CP
[3.338 5.793 2.515 5.184 1.669 5.793] CP
[0.823 6.403 0.267 6.607 0.000 6.403] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 95.571 270.142 0.000 0.000 12.807 17.761
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[17.761 7.949] CP
[17.231 7.655 16.789 7.164 16.436 6.477] CP
[16.082 5.790 15.806 5.177 15.607 4.637] CP
[15.409 4.097 15.210 3.336 15.011 2.355] CP
[14.812 1.374 14.558 0.736 14.249 0.441] CP
[13.939 0.147 13.630 0.417 13.321 1.251] CP
[13.012 2.085 12.769 2.968 12.592 3.901] CP
[12.415 4.833 12.272 5.422 12.161 5.667] CP
[12.051 5.913 11.929 6.501 11.797 7.434] CP
[11.664 8.366 11.410 9.397 11.034 10.525] CP
[10.659 11.654 10.372 12.316 10.173 12.513] CP
[9.974 12.709 9.709 12.734 9.378 12.586] CP
[9.046 12.439 8.825 12.194 8.715 11.850] CP
[8.604 11.507 8.417 10.746 8.151 9.568] CP
[7.886 8.391 7.632 7.458 7.389 6.771] CP
[7.146 6.084 6.958 5.446 6.826 4.858] CP
[6.693 4.269 6.539 4.293 6.362 4.931] CP
[6.185 5.569 5.997 6.305 5.799 7.139] CP
[5.600 7.974 5.357 8.563 5.070 8.906] CP
[4.782 9.250 4.573 8.931 4.440 7.949] CP
[4.307 6.968 4.186 6.133 4.075 5.446] CP
[3.965 4.759 3.766 4.759 3.479 5.446] CP
[3.192 6.133 2.938 6.919 2.717 7.802] CP
[2.496 8.685 2.275 9.176 2.054 9.274] CP
[1.833 9.372 1.645 9.053 1.491 8.317] CP
[1.336 7.581 1.093 7.090 0.762 6.845] CP
[0.430 6.600 0.176 6.870 0.000 7.655] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%
%tfEndGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 96.920 246.000 0.000 0.000 12.483 23.991
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[23.991 5.584] CP
[23.081 1.861 22.466 0.766 22.145 2.299] CP
[21.824 3.832 21.503 5.201 21.182 6.405] CP
[20.861 7.610 20.580 7.336 20.340 5.584] CP
[20.099 3.832 19.925 2.737 19.818 2.299] CP
[19.711 1.861 19.470 2.628 19.096 4.599] CP
[18.722 6.570 18.454 8.376 18.294 10.019] CP
[18.133 11.662 17.879 11.771 17.531 10.347] CP
[17.184 8.924 16.742 7.008 16.207 4.599] CP
[15.673 2.190 15.271 1.149 15.004 1.478] CP
[14.736 1.806 14.496 2.628 14.282 3.942] CP
[14.068 5.256 13.774 5.967 13.399 6.077] CP
[13.025 6.186 12.677 5.967 12.356 5.420] CP
[12.035 4.872 11.728 4.872 11.433 5.420] CP
[11.139 5.967 10.858 6.132 10.591 5.913] CP
[10.323 5.694 9.909 5.858 9.347 6.405] CP
[8.786 6.953 8.317 7.172 7.943 7.062] CP
[7.569 6.953 7.221 6.679 6.900 6.241] CP
[6.579 5.803 6.271 5.310 5.977 4.763] CP
[5.683 4.215 5.389 4.270 5.095 4.927] CP
[4.800 5.584 4.466 6.077 4.092 6.405] CP
[3.717 6.734 3.343 6.624 2.968 6.077] CP
[2.594 5.529 2.260 5.420 1.965 5.748] CP
[1.671 6.077 1.016 6.241 0.000 6.241] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%
%tfEndGrp
%
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 80.500 247.500 0.000 0.000 12.000 105.004 rect
%@EndRect
gsave
300.002 86.500 T translate
0.0 rotate
1 1 scale
10.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(s) -52.000 3.000 S
(h) -48.108 3.000 S
( ) -43.108 3.000 S
( ) -40.608 3.000 S
(t) -38.108 3.000 S
( ) -35.330 3.000 S
( ) -32.830 3.000 S
(i) -30.330 3.000 S
(y) -27.551 3.000 S
( ) -22.551 3.000 S
( ) -20.051 3.000 S
(p) -17.551 3.000 S
( ) -12.551 3.000 S
( ) -10.051 3.000 S
(s) -7.551 3.000 S
( ) -3.660 3.000 S
( ) -1.160 3.000 S
(z) 1.339 3.000 S
( ) 5.778 3.000 S
( ) 8.278 3.000 S
(i) 10.778 3.000 S
(h) 13.556 3.000 S
( ) 18.556 3.000 S
( ) 21.056 3.000 S
(s) 23.556 3.000 S
( ) 27.448 3.000 S
( ) 29.948 3.000 S
(i) 32.448 3.000 S
(h) 35.226 3.000 S
( ) 40.226 3.000 S
( ) 42.726 3.000 S
(t) 45.226 3.000 S
(h) 48.004 3.000 S
grestore
%@EndText
%
%tfBegGrp
%
%
%tfBegGrp
%
%
%tfBegGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 173.560 245.702 0.000 0.000 12.082 13.105
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[-0.000 5.655] CP
[0.303 1.885 0.626 0.128 0.968 0.385] CP
[1.310 0.642 1.614 1.713 1.880 3.599] CP
[2.146 5.484 2.583 7.369 3.190 9.254] CP
[3.798 11.139 4.254 11.739 4.558 11.054] CP
[4.862 10.368 5.128 9.211 5.355 7.583] CP
[5.583 5.955 5.906 4.627 6.324 3.599] CP
[6.742 2.570 7.141 2.742 7.521 4.113] CP
[7.901 5.484 8.166 6.598 8.318 7.455] CP
[8.470 8.312 8.888 7.969 9.572 6.426] CP
[10.256 4.884 10.958 4.370 11.680 4.884] CP
[12.402 5.398 12.877 5.569 13.105 5.398] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 172.275 258.921 0.000 0.000 10.797 15.156
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 6.701] CP
[0.452 6.453 0.829 6.039 1.131 5.460] CP
[1.432 4.881 1.668 4.364 1.838 3.909] CP
[2.007 3.454 2.177 2.813 2.346 1.985] CP
[2.516 1.158 2.733 0.620 2.997 0.372] CP
[3.261 0.124 3.525 0.351 3.789 1.054] CP
[4.052 1.758 4.260 2.502 4.411 3.288] CP
[4.561 4.074 4.684 4.571 4.778 4.778] CP
[4.873 4.984 4.976 5.481 5.089 6.267] CP
[5.202 7.053 5.419 7.922 5.740 8.873] CP
[6.060 9.824 6.305 10.383 6.475 10.548] CP
[6.645 10.714 6.871 10.735 7.154 10.610] CP
[7.436 10.486 7.625 10.280 7.719 9.990] CP
[7.813 9.700 7.974 9.059 8.200 8.066] CP
[8.426 7.073 8.643 6.287 8.850 5.708] CP
[9.057 5.129 9.218 4.591 9.331 4.095] CP
[9.444 3.599 9.576 3.619 9.727 4.157] CP
[9.878 4.695 10.038 5.315 10.207 6.019] CP
[10.377 6.722 10.584 7.218 10.830 7.508] CP
[11.075 7.797 11.254 7.529 11.367 6.701] CP
[11.480 5.874 11.584 5.171 11.678 4.591] CP
[11.772 4.012 11.942 4.012 12.187 4.591] CP
[12.432 5.171 12.649 5.832 12.837 6.577] CP
[13.026 7.322 13.214 7.735 13.403 7.818] CP
[13.591 7.901 13.751 7.632 13.883 7.011] CP
[14.015 6.391 14.223 5.977 14.505 5.770] CP
[14.788 5.564 15.005 5.791 15.156 6.453] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%
%tfEndGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 174.184 274.285 0.000 0.000 8.959 16.265
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 4.886] CP
[0.956 1.628] CP
[1.913 8.959 ] CP
[2.870 0.000 ] CP
[3.827 8.959 ] CP
[4.783 0.814 ] CP
[5.740 8.959 ] CP
[6.697 0.000 ] CP
[7.654 8.959 ] CP
[8.611 0.000 ] CP
[9.567 8.959 ] CP
[10.524 0.814 ] CP
[11.481 8.959 ] CP
[12.438 2.443 ] CP
[13.395 8.144 ] CP
[14.351 3.257 ] CP
[15.308 6.515 ] CP
[16.265 4.886 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 177.957 290.461 0.000 0.000 3.549 14.295
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 0.968] CP
[0.234 0.645] CP
[0.234 0.322 ] CP
[0.468 0.322 ] CP
[0.468 0.000 ] CP
[0.703 0.000 ] CP
[0.703 0.322 ] CP
[0.937 0.322 ] CP
[1.171 0.645 ] CP
[1.406 0.645 ] CP
[1.406 0.968 ] CP
[1.640 0.968 ] CP
[1.874 0.968 ] CP
[1.874 1.290 ] CP
[2.109 1.290 ] CP
[2.109 1.613 ] CP
[2.109 1.936 ] CP
[2.343 2.581 ] CP
[2.577 2.581 ] CP
[2.812 2.581 ] CP
[3.046 2.581 ] CP
[3.280 2.581 ] CP
[3.515 2.581 ] CP
[3.749 2.259 ] CP
[3.749 1.936 ] CP
[3.984 1.936 ] CP
[3.984 1.613 ] CP
[4.218 1.613 ] CP
[4.218 1.290 ] CP
[4.452 1.290 ] CP
[4.687 1.290 ] CP
[5.390 1.290 ] CP
[5.624 1.613 ] CP
[5.624 1.936 ] CP
[5.858 1.936 ] CP
[5.858 2.259 ] CP
[6.093 2.259 ] CP
[6.093 2.581 ] CP
[6.327 2.581 ] CP
[6.561 2.581 ] CP
[6.561 2.904 ] CP
[6.796 2.904 ] CP
[6.796 2.581 ] CP
[6.796 2.259 ] CP
[7.030 1.936 ] CP
[7.030 2.259 ] CP
[7.265 2.259 ] CP
[7.265 2.581 ] CP
[7.499 2.581 ] CP
[7.499 2.904 ] CP
[7.733 2.904 ] CP
[7.733 3.227 ] CP
[7.968 3.227 ] CP
[8.202 3.227 ] CP
[8.436 2.904 ] CP
[8.436 2.581 ] CP
[8.436 2.259 ] CP
[8.671 2.259 ] CP
[8.905 2.259 ] CP
[8.905 1.936 ] CP
[9.139 1.936 ] CP
[9.374 1.936 ] CP
[9.608 1.936 ] CP
[9.842 1.936 ] CP
[10.077 1.936 ] CP
[10.077 2.259 ] CP
[10.311 2.581 ] CP
[10.311 2.904 ] CP
[10.546 2.904 ] CP
[10.546 3.227 ] CP
[10.780 3.227 ] CP
[10.780 3.549 ] CP
[11.014 3.549 ] CP
[11.249 3.549 ] CP
[11.483 3.549 ] CP
[11.483 3.227 ] CP
[11.483 2.904 ] CP
[11.483 2.581 ] CP
[11.483 2.259 ] CP
[11.483 1.936 ] CP
[11.483 1.613 ] CP
[11.483 1.290 ] CP
[11.483 0.968 ] CP
[11.717 0.968 ] CP
[11.952 0.968 ] CP
[12.420 0.645 ] CP
[12.655 0.645 ] CP
[12.655 0.968 ] CP
[12.655 1.290 ] CP
[12.889 1.290 ] CP
[13.123 1.290 ] CP
[13.123 1.613 ] CP
[13.123 1.936 ] CP
[13.358 1.936 ] CP
[13.592 1.936 ] CP
[13.592 2.259 ] CP
[13.826 2.259 ] CP
[14.061 2.259 ] CP
[14.295 2.259 ] CP
[14.295 1.936 ] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 175.203 305.048 0.000 0.000 10.523 20.471
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 4.707] CP
[0.775 1.569 1.300 0.646 1.574 1.938] CP
[1.848 3.230 2.122 4.384 2.396 5.400] CP
[2.670 6.415 2.909 6.184 3.115 4.707] CP
[3.320 3.230 3.469 2.307 3.560 1.938] CP
[3.651 1.569 3.857 2.215 4.176 3.877] CP
[4.496 5.538 4.724 7.061 4.861 8.446] CP
[4.998 9.831 5.214 9.923 5.511 8.723] CP
[5.808 7.523 6.184 5.908 6.641 3.877] CP
[7.097 1.846 7.440 0.969 7.668 1.246] CP
[7.896 1.523 8.101 2.215 8.284 3.323] CP
[8.467 4.430 8.718 5.031 9.037 5.123] CP
[9.357 5.215 9.653 5.031 9.927 4.569] CP
[10.201 4.107 10.464 4.107 10.715 4.569] CP
[10.966 5.031 11.205 5.169 11.434 4.984] CP
[11.662 4.800 12.016 4.938 12.495 5.400] CP
[12.974 5.861 13.373 6.046 13.693 5.954] CP
[14.012 5.861 14.309 5.631 14.583 5.261] CP
[14.857 4.892 15.119 4.477 15.370 4.015] CP
[15.621 3.554 15.873 3.600 16.124 4.154] CP
[16.375 4.707 16.660 5.123 16.979 5.400] CP
[17.299 5.677 17.618 5.584 17.938 5.123] CP
[18.257 4.661 18.543 4.569 18.794 4.846] CP
[19.045 5.123 19.604 5.261 20.471 5.261] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 173.092 325.656 0.000 0.000 15.632 13.573
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 7.317] CP
[0.314 2.439 0.649 0.166 1.003 0.498] CP
[1.357 0.831 1.672 2.217 1.947 4.656] CP
[2.222 7.095 2.675 9.534 3.304 11.973] CP
[3.934 14.412 4.406 15.188 4.721 14.302] CP
[5.036 13.415 5.311 11.918 5.547 9.811] CP
[5.783 7.705 6.118 5.986 6.550 4.656] CP
[6.983 3.326 7.396 3.547 7.790 5.321] CP
[8.183 7.095 8.459 8.536 8.616 9.645] CP
[8.773 10.754 9.206 10.310 9.914 8.315] CP
[10.622 6.319 11.350 5.654 12.098 6.319] CP
[12.845 6.984 13.337 7.206 13.573 6.984] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 174.060 339.372 0.000 0.000 13.050 13.573
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 6.108] CP
[0.314 2.036 0.649 0.138 1.003 0.416] CP
[1.357 0.694 1.672 1.851 1.947 3.887] CP
[2.222 5.923 2.675 7.959 3.304 9.996] CP
[3.934 12.032 4.406 12.680 4.721 11.939] CP
[5.036 11.199 5.311 9.949 5.547 8.191] CP
[5.783 6.432 6.118 4.998 6.550 3.887] CP
[6.983 2.776 7.396 2.961 7.790 4.442] CP
[8.183 5.923 8.459 7.126 8.616 8.052] CP
[8.773 8.978 9.206 8.607 9.914 6.941] CP
[10.622 5.275 11.350 4.720 12.098 5.275] CP
[12.845 5.831 13.337 6.016 13.573 5.831] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 174.789 353.556 0.000 0.000 10.947 12.636
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 5.124] CP
[0.293 1.708 0.604 0.116 0.933 0.349] CP
[1.263 0.582 1.556 1.552 1.813 3.261] CP
[2.069 4.969 2.490 6.677 3.076 8.385] CP
[3.662 10.093 4.102 10.637 4.395 10.015] CP
[4.688 9.394 4.944 8.346 5.164 6.871] CP
[5.384 5.396 5.695 4.192 6.098 3.261] CP
[6.501 2.329 6.885 2.484 7.252 3.726] CP
[7.618 4.969 7.874 5.978 8.021 6.754] CP
[8.167 7.531 8.570 7.220 9.230 5.823] CP
[9.889 4.425 10.566 3.959 11.262 4.425] CP
[11.958 4.891 12.416 5.046 12.636 4.891] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginPoly
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {} def
/PC {} def
1.000 0 175.535 366.393 0.000 0.000 8.061 23.904
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[23.904 3.908] CP
[23.673 3.231 23.683 2.262 23.312 2.171] CP
[23.149 2.132 23.092 2.498 22.989 2.791] CP
[22.705 3.599 22.817 4.545 22.450 5.149] CP
[22.225 5.518 22.018 5.557 21.750 5.397] CP
[21.519 5.258 21.439 4.908 21.266 4.528] CP
[20.963 3.867 20.924 3.159 20.566 2.667] CP
[20.400 2.439 20.262 2.261 20.081 2.419] CP
[19.547 2.885 19.689 4.398 19.220 5.149] CP
[18.898 5.664 18.638 5.909 18.251 5.769] CP
[17.382 5.456 17.003 4.314 16.366 2.916] CP
[16.160 2.461 16.193 1.835 15.936 1.551] CP
[15.556 1.133 15.236 1.248 14.859 1.675] CP
[14.511 2.068 14.400 2.631 14.213 3.412] CP
[13.872 4.831 14.232 6.393 13.674 7.382] CP
[13.291 8.061 12.884 7.927 12.436 7.506] CP
[12.037 7.130 11.938 6.444 11.682 5.645] CP
[11.582 5.331 11.574 5.079 11.467 4.776] CP
[11.308 4.324 11.109 4.288 10.983 3.784] CP
[10.778 2.971 11.013 2.176 10.767 1.427] CP
[10.495 0.598 10.188 0.000 9.744 0.186] CP
[8.779 0.593 8.738 2.859 8.075 4.528] CP
[7.724 5.412 7.622 6.214 7.160 6.761] CP
[6.745 7.252 6.428 7.389 5.976 7.134] CP
[5.376 6.795 5.180 5.870 4.683 5.025] CP
[4.406 4.553 4.272 4.218 3.984 3.784] CP
[3.582 3.179 3.371 2.694 2.907 2.419] CP
[2.500 2.179 2.240 2.207 1.830 2.419] CP
[1.399 2.642 1.226 3.216 0.807 3.536] CP
[0.502 3.769 0.314 3.763 0.000 3.908] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndPoly
%
%tfEndGrp
%
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 152.500 248.500 0.000 0.000 12.000 138.051 rect
%@EndRect
gsave
317.525 158.500 T translate
0.0 rotate
1 1 scale
10.000 (_Times-Roman) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(a) -69.000 3.000 S
( ) -64.561 3.000 S
( ) -62.061 3.000 S
(b) -59.561 3.000 S
( ) -54.561 3.000 S
( ) -52.061 3.000 S
(i) -49.561 3.000 S
(h) -46.783 3.000 S
( ) -41.783 3.000 S
(t) -39.283 3.000 S
( ) -36.504 3.000 S
( ) -34.004 3.000 S
(l) -31.504 3.000 S
( ) -28.726 3.000 S
( ) -26.226 3.000 S
(o) -23.726 3.000 S
(h) -18.726 3.000 S
( ) -13.726 3.000 S
( ) -11.226 3.000 S
(n) -8.726 3.000 S
( ) -3.726 3.000 S
( ) -1.226 3.000 S
(g) 1.273 3.000 S
( ) 6.273 3.000 S
( ) 8.773 3.000 S
(a) 11.273 3.000 S
(x) 15.711 3.000 S
( ) 20.711 3.000 S
( ) 23.211 3.000 S
(s) 25.711 3.000 S
( ) 29.603 3.000 S
(p) 32.103 3.000 S
( ) 37.103 3.000 S
( ) 39.603 3.000 S
( ) 42.103 3.000 S
(i) 44.603 3.000 S
(y) 47.381 3.000 S
( ) 52.381 3.000 S
(t) 54.881 3.000 S
( ) 57.660 3.000 S
(s) 60.160 3.000 S
(h) 64.051 3.000 S
grestore
%@EndText
%
%tfEndGrp
%
%@BeginText
restore
save
%%IncludeFont: Times-Bold
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Bold /Times-Bold EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 119.500 271.500 0.000 0.000 20.000 31.500 rect
%@EndRect
gsave
287.250 129.500 T translate
0.0 rotate
1 1 scale
18.000 (_Times-Bold) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(.) -15.000 5.000 S
( ) -10.500 5.000 S
(.) -6.000 5.000 S
( ) -1.500 5.000 S
(.) 3.000 5.000 S
( ) 7.500 5.000 S
(.) 12.000 5.000 S
grestore
%@EndText
restore
%%Trailer
end
